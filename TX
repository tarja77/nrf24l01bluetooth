
#include <SPI.h>
#include "RF24.h"
#include "printf.h"
RF24 radio(9,10);
/**********************************************************/

byte addresses[][6] = {"1Node","2Node"};

void setup() {
  Serial.begin(115200);
  Serial.println(F("RF24/examples/GettingStarted"));
  Serial.println(F("*** PRESS 'T' to begin transmitting to the other node"));
  printf_begin();
  radio.begin();
   radio.printDetails();
  radio.setPALevel(RF24_PA_LOW);
    radio.openWritingPipe(addresses[0]);
    radio.openReadingPipe(1,addresses[1]);
  radio.startListening();
}

void loop() {
  
  
    
    radio.stopListening();                                    // First, stop listening so we can talk.
    unsigned long start_time = millis();                             // Take the time, and send it.  This will block until complete
     if (!radio.write( &start_time, sizeof(unsigned long) )){
       Serial.println(F("failed"));
     }
        
    radio.startListening();                                    // Now, continue listening
    
    unsigned long started_waiting_at = millis();               // Set up a timeout period, get the current microseconds
    boolean timeout = false;                                   // Set up a variable to indicate if a response was received or not
    while ( ! radio.available() ){                             // While nothing is received
      if (millis() - started_waiting_at > 800 ){            // If waited longer than 200ms, indicate timeout and exit while loop
          timeout = true;
          break;
      }      
    }
        
    if ( timeout ){                                             // Describe the results
        Serial.println(F("Failed, response timed out."));
         Serial.write(-1);
    }else{
        unsigned long got_time;                                 // Grab the response, compare, and send to debugging spew
        radio.read( &got_time, sizeof(unsigned long) );
        unsigned long end_time = millis();
        
      //  Serial.print(end_time-start_time);
       // Serial.println(F(" ms"));

       Serial.write(end_time-start_time);
    }

    // Try again 1s later
    delay(10);
  



}

